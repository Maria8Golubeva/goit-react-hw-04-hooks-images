{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Services/PixabayAPI.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","inputValue","setInputValue","reset","className","evt","preventDefault","type","onChange","target","value","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","openImage","url","id","onClick","clickedImageId","src","alt","defaultProps","Button","totalElements","text","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","color","height","width","timeout","Modal","modalToggle","keyDownHandler","code","addEventListener","removeEventListener","currentTarget","fetchImages","searchQuery","page","axios","get","then","responce","data","hits","App","setSearchQuery","modalShow","setModalShow","pageNumber","setPageNumber","images","setImages","modalImageURL","setModalImageUrl","loader","setLoader","error","setError","length","prev","catch","finally","clickImage","filter","item","Number","largeImageURL","query","map","webformatURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5629e945.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Searchbar({ onSubmit }) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const inputHandler = (evt) => {\n    setInputValue(evt.target.value);\n  };\n\n  const submitHandler = (evt) => {\n    evt.preventDefault();\n    onSubmit(inputValue);\n    reset();\n  };\n\n  const reset = () => {\n    setInputValue(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={submitHandler} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          onChange={inputHandler}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={inputValue}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\n\nfunction ImageGallery({ children }) {\n  return <ul className=\"ImageGallery\">{children}</ul>;\n}\n\nImageGallery.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\n\nfunction ImageGalleryItem({ openImage, url, id }) {\n  const clickHandler = (evt) => {\n    const clickedImageId = evt.target.id;\n    openImage(clickedImageId);\n  };\n\n  return (\n    <li key={id} className=\"ImageGalleryItem\">\n      <img\n        onClick={clickHandler}\n        id={id}\n        src={url}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.defaultProps = {\n  url: \"https://static8.depositphotos.com/1431107/919/i/600/depositphotos_9199988-stock-photo-oops-icon.jpg\",\n};\n\nImageGalleryItem.propTypes = {\n  openImage: PropTypes.func.isRequired,\n  url: PropTypes.string,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ totalElements, onClick, text }) {\n  useEffect(() => {\n    if (totalElements > 13) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }, [totalElements]);\n\n  return (\n    <button className=\"Button\" onClick={onClick} type=\"button\">\n      {text}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  text: \"Just Button\",\n  totalElements: 1,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  totalElements: PropTypes.number,\n};\n\nexport default Button;\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport LoaderSpinner from \"react-loader-spinner\";\n\nfunction Loader() {\n  return (\n    <LoaderSpinner\n      className=\"Loader\"\n      type=\"ThreeDots\"\n      color=\"#3f51b5\"\n      height={50}\n      width={50}\n      timeout={10000}\n    />\n  );\n}\n\nexport default Loader;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Modal({ modalToggle, url }) {\n  useEffect(() => {\n    const keyDownHandler = (evt) => {\n      if (evt.code === \"Escape\") {\n        modalToggle();\n      }\n    };\n    window.addEventListener(\"keydown\", keyDownHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keyDownHandler);\n    };\n  }, [modalToggle]);\n\n  const clickHandler = (evt) => {\n    if (evt.target === evt.currentTarget) {\n      modalToggle();\n    }\n  };\n\n  return (\n    <div onClick={clickHandler} className=\"Overlay\">\n      <div className=\"Modal\">\n        <img src={url} alt=\"full size\" />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  modalToggle: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from \"axios\";\n\nconst BASIC_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"21846437-66fd09c28b54c2b2cddc581a4\";\n\nfunction fetchImages(searchQuery, page) {\n  return axios\n    .get(\n      `${BASIC_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((responce) => responce.data.hits);\n}\n\nexport default fetchImages;\n","import { useState, useEffect } from \"react\";\n\nimport Searchbar from \"./Components/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport ImageGalleryItem from \"./Components/ImageGalleryItem\";\nimport Button from \"./Components/Button\";\nimport Loader from \"./Components/Loader/Loader\";\nimport Modal from \"./Components/Modal\";\n\nimport fetchImages from \"./Services/PixabayAPI\";\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [images, setImages] = useState([]);\n  const [modalImageURL, setModalImageUrl] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setLoader(true);\n    fetchImages(searchQuery, pageNumber)\n      .then((responce) => {\n        if (responce.length === 0) {\n          setError(\"empty responce\");\n        }\n        setImages((prev) => [...prev, ...responce]);\n      })\n      .catch(setError)\n      .finally(setLoader(false));\n  }, [searchQuery, pageNumber]);\n\n  const openImage = (id) => {\n    setModalShow(!modalShow);\n    const clickImage = images.filter((item) => item.id === Number(id));\n    setModalImageUrl(clickImage[0].largeImageURL);\n  };\n\n  const getSearchQuery = (query) => {\n    if (query === searchQuery) {\n      return;\n    }\n    setSearchQuery(query);\n    setImages([]);\n    setPageNumber(1);\n    setError(\"\");\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={getSearchQuery} />\n      <ImageGallery>\n        {images.map((item) => (\n          <ImageGalleryItem\n            key={item.id}\n            id={item.id}\n            url={item.webformatURL}\n            openImage={openImage}\n          />\n        ))}\n      </ImageGallery>\n\n      {error && (\n        <p>oops... something went wrong, try again later or change query</p>\n      )}\n\n      {loader && <Loader />}\n\n      {images.length > 0 && !loader && (\n        <Button\n          onClick={() => setPageNumber((prev) => prev + 1)}\n          text={\"Load more\"}\n          totalElements={images.length}\n        />\n      )}\n\n      {modalShow && (\n        <Modal\n          url={modalImageURL}\n          modalToggle={() => setModalShow(!modalShow)}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles.css\";\nimport \"modern-normalize\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}